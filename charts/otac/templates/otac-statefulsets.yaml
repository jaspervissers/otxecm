########################################################################
# OpenText Archive Center Kuberntes Stateful Sets
########################################################################
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  labels:
    app.kubernetes.io/component: {{ .Chart.Name }}
    {{- include (printf "%s%s" .Chart.Name ".labels" ) . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  serviceName: {{ .Values.serviceName }}
  selector:
    matchLabels:
      app.kubernetes.io/component: {{ .Chart.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: {{ .Chart.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      securityContext:
        ## The fsGroup field specifies that group ID {{ .Values.fsGroup }} is associated
        ## with all Containers in the Pod. Group ID {{ .Values.fsGroup }} is also
        ## associated with the mounted volumes and with any files created
        ## in that volume.
        ## This will make volumes be mounted with {{ .Values.fsGroup }} group permissions.
        fsGroup: {{ .Values.fsGroup }}
      ## serviceAccountName defines the name of the service account the
      ## pods are running under. Normally that is 'default'
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
      - name: {{ .Chart.Name }}
{{- if not (regexFind "\\/$" .Values.image.source ) }}
        image: {{ required "A valid image.source is required!" .Values.image.source }}/{{ required "A valid image.name is required!" .Values.image.name }}:{{ required "A valid image.tag is required!" .Values.image.tag }}
{{- else }}
        image: {{ required "A valid image.source is required!" .Values.image.source }}{{ required "A valid image.name is required!" .Values.image.name }}:{{ required "A valid image.tag is required!" .Values.image.tag }}
{{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        envFrom:
          - configMapRef:
              name: {{ .Chart.Name }}-configmap
          - configMapRef:
              name: {{ .Chart.Name }}-pre-upgrade-configmap
              optional: true
        env:
          - name: otdsPassword
            valueFrom:
              secretKeyRef:
                {{- if .Values.existingSecret }}
                name: {{ .Values.existingSecret }}
                {{- else }}
                name: {{ .Chart.Name }}-secrets
                {{- end }}
                key: OTDS_PASS
          - name: targetDBPassword
            valueFrom:
              secretKeyRef:
                {{- if .Values.existingSecret }}
                name: {{ .Values.existingSecret }}
                {{- else }}
                name: {{ .Chart.Name }}-secrets
                {{- end }}
                key: TARGET_DB_PASSWORD
          - name: PGPASSWORD
            valueFrom:
              secretKeyRef:
                {{- if .Values.existingSecret }}
                name: {{ .Values.existingSecret }}
                {{- else }}
                name: {{ .Chart.Name }}-secrets
                {{- end }}
                key: PG_PASSWORD
{{- if eq .Values.readinessProbe.enabled true }}
        readinessProbe:
            exec:
              command:
                - "/opt/opentext/shell_scripts/check_as_readiness.sh"
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
{{- end }}
{{- if eq .Values.livenessProbe.enabled true }}
        livenessProbe:
            exec:
              command:
                - "/opt/opentext/shell_scripts/check_as_liveness.sh"
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
{{- end }}                
{{- if eq .Values.resources.enabled true }}
        resources:
          limits:
            cpu: {{ .Values.resources.limits.cpu }}
            memory: {{ .Values.resources.limits.memory }}
          requests:
            cpu: {{ .Values.resources.requests.cpu }}
            memory: {{ .Values.resources.requests.memory }}
{{- end }}
        ports:
        - containerPort: {{ .Values.acPort }}
        - containerPort: {{ .Values.targetPort }}
        volumeMounts:
        - mountPath: /opt/opentext/ac_bdv
          name: {{ $.Chart.Name }}-bdv
        - mountPath: /opt/opentext/ac_dv
          name: {{ $.Chart.Name }}-dv
        - mountPath: /opt/opentext/ac_sd
          name: {{ $.Chart.Name }}-sd
        - mountPath: /opt/opentext/logs
          name: {{ $.Chart.Name }}-logs
        - mountPath: /opt/opentext/archive_center/ac_config
          name: {{ $.Chart.Name }}-config 
      
      volumes:
      - name: {{ $.Chart.Name }}-config
        persistentVolumeClaim:
         claimName: {{ $.Chart.Name }}-config

      hostname: {{ .Values.hostname }}
{{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
{{- end }}
  volumeClaimTemplates:
  - metadata:
      name: {{ $.Chart.Name }}-bdv
    spec:
      accessModes:
      - {{ .Values.volumes.accessMode | default "ReadWriteOnce" }}
    {{- if $.Values.resources.storageClassName }}
      storageClassName: {{ $.Values.resources.storageClassName | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.storage.bdv }}
  - metadata:
      name: {{ $.Chart.Name }}-dv
    spec:
      accessModes:
      - {{ .Values.volumes.accessMode | default "ReadWriteOnce" }}
    {{- if $.Values.resources.storageClassName }}
      storageClassName: {{ $.Values.resources.storageClassName | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.storage.dv }}
  - metadata:
      name: {{ $.Chart.Name }}-sd
    spec:
      accessModes:
      - {{ .Values.volumes.accessMode | default "ReadWriteOnce" }}
    {{- if $.Values.resources.storageClassName }}
      storageClassName: {{ $.Values.resources.storageClassName | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.storage.sd }}
  - metadata:
      name: {{ $.Chart.Name }}-logs
    spec:
      accessModes:
      - {{ .Values.volumes.accessMode | default "ReadWriteOnce" }}
    {{- if $.Values.resources.storageClassName }}
      storageClassName: {{ $.Values.resources.storageClassName | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.volumes.storage.logs }}
---
